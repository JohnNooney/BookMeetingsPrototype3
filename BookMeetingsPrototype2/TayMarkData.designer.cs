#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookMeetingsPrototype2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sql1803534")]
	public partial class TayMarkDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTayMarkBooking(TayMarkBooking instance);
    partial void UpdateTayMarkBooking(TayMarkBooking instance);
    partial void DeleteTayMarkBooking(TayMarkBooking instance);
    partial void InsertTayMarkBooking_Emp(TayMarkBooking_Emp instance);
    partial void UpdateTayMarkBooking_Emp(TayMarkBooking_Emp instance);
    partial void DeleteTayMarkBooking_Emp(TayMarkBooking_Emp instance);
    partial void InsertTayMarkEmployee(TayMarkEmployee instance);
    partial void UpdateTayMarkEmployee(TayMarkEmployee instance);
    partial void DeleteTayMarkEmployee(TayMarkEmployee instance);
    partial void InsertTayMarkRoom(TayMarkRoom instance);
    partial void UpdateTayMarkRoom(TayMarkRoom instance);
    partial void DeleteTayMarkRoom(TayMarkRoom instance);
    partial void InsertTayMarkAdmin(TayMarkAdmin instance);
    partial void UpdateTayMarkAdmin(TayMarkAdmin instance);
    partial void DeleteTayMarkAdmin(TayMarkAdmin instance);
    #endregion
		
		public TayMarkDataDataContext() : 
				base(global::BookMeetingsPrototype2.Properties.Settings.Default.sql1803534ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TayMarkDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TayMarkDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TayMarkDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TayMarkDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TayMarkBooking> TayMarkBookings
		{
			get
			{
				return this.GetTable<TayMarkBooking>();
			}
		}
		
		public System.Data.Linq.Table<TayMarkBooking_Emp> TayMarkBooking_Emps
		{
			get
			{
				return this.GetTable<TayMarkBooking_Emp>();
			}
		}
		
		public System.Data.Linq.Table<TayMarkEmployee> TayMarkEmployees
		{
			get
			{
				return this.GetTable<TayMarkEmployee>();
			}
		}
		
		public System.Data.Linq.Table<TayMarkRoom> TayMarkRooms
		{
			get
			{
				return this.GetTable<TayMarkRoom>();
			}
		}
		
		public System.Data.Linq.Table<TayMarkAdmin> TayMarkAdmins
		{
			get
			{
				return this.GetTable<TayMarkAdmin>();
			}
		}
		
		public System.Data.Linq.Table<TayMarkAdminPass> TayMarkAdminPasses
		{
			get
			{
				return this.GetTable<TayMarkAdminPass>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TAYMARK.TayMarkBooking")]
	public partial class TayMarkBooking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _meetingId;
		
		private string _meetingTitle;
		
		private int _meetingRoomId;
		
		private string _meetingDuration;
		
		private System.DateTime _meetingStart;
		
		private System.Nullable<System.DateTime> _meetingEnd;
		
		private EntitySet<TayMarkBooking_Emp> _TayMarkBooking_Emps;
		
		private EntityRef<TayMarkRoom> _TayMarkRoom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmeetingIdChanging(int value);
    partial void OnmeetingIdChanged();
    partial void OnmeetingTitleChanging(string value);
    partial void OnmeetingTitleChanged();
    partial void OnmeetingRoomIdChanging(int value);
    partial void OnmeetingRoomIdChanged();
    partial void OnmeetingDurationChanging(string value);
    partial void OnmeetingDurationChanged();
    partial void OnmeetingStartChanging(System.DateTime value);
    partial void OnmeetingStartChanged();
    partial void OnmeetingEndChanging(System.Nullable<System.DateTime> value);
    partial void OnmeetingEndChanged();
    #endregion
		
		public TayMarkBooking()
		{
			this._TayMarkBooking_Emps = new EntitySet<TayMarkBooking_Emp>(new Action<TayMarkBooking_Emp>(this.attach_TayMarkBooking_Emps), new Action<TayMarkBooking_Emp>(this.detach_TayMarkBooking_Emps));
			this._TayMarkRoom = default(EntityRef<TayMarkRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int meetingId
		{
			get
			{
				return this._meetingId;
			}
			set
			{
				if ((this._meetingId != value))
				{
					this.OnmeetingIdChanging(value);
					this.SendPropertyChanging();
					this._meetingId = value;
					this.SendPropertyChanged("meetingId");
					this.OnmeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string meetingTitle
		{
			get
			{
				return this._meetingTitle;
			}
			set
			{
				if ((this._meetingTitle != value))
				{
					this.OnmeetingTitleChanging(value);
					this.SendPropertyChanging();
					this._meetingTitle = value;
					this.SendPropertyChanged("meetingTitle");
					this.OnmeetingTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingRoomId", DbType="Int NOT NULL")]
		public int meetingRoomId
		{
			get
			{
				return this._meetingRoomId;
			}
			set
			{
				if ((this._meetingRoomId != value))
				{
					if (this._TayMarkRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmeetingRoomIdChanging(value);
					this.SendPropertyChanging();
					this._meetingRoomId = value;
					this.SendPropertyChanged("meetingRoomId");
					this.OnmeetingRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingDuration", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string meetingDuration
		{
			get
			{
				return this._meetingDuration;
			}
			set
			{
				if ((this._meetingDuration != value))
				{
					this.OnmeetingDurationChanging(value);
					this.SendPropertyChanging();
					this._meetingDuration = value;
					this.SendPropertyChanged("meetingDuration");
					this.OnmeetingDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingStart", DbType="DateTime NOT NULL")]
		public System.DateTime meetingStart
		{
			get
			{
				return this._meetingStart;
			}
			set
			{
				if ((this._meetingStart != value))
				{
					this.OnmeetingStartChanging(value);
					this.SendPropertyChanging();
					this._meetingStart = value;
					this.SendPropertyChanged("meetingStart");
					this.OnmeetingStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> meetingEnd
		{
			get
			{
				return this._meetingEnd;
			}
			set
			{
				if ((this._meetingEnd != value))
				{
					this.OnmeetingEndChanging(value);
					this.SendPropertyChanging();
					this._meetingEnd = value;
					this.SendPropertyChanged("meetingEnd");
					this.OnmeetingEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TayMarkBooking_TayMarkBooking_Emp", Storage="_TayMarkBooking_Emps", ThisKey="meetingId", OtherKey="meetingId")]
		public EntitySet<TayMarkBooking_Emp> TayMarkBooking_Emps
		{
			get
			{
				return this._TayMarkBooking_Emps;
			}
			set
			{
				this._TayMarkBooking_Emps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TayMarkRoom_TayMarkBooking", Storage="_TayMarkRoom", ThisKey="meetingRoomId", OtherKey="roomId", IsForeignKey=true)]
		public TayMarkRoom TayMarkRoom
		{
			get
			{
				return this._TayMarkRoom.Entity;
			}
			set
			{
				TayMarkRoom previousValue = this._TayMarkRoom.Entity;
				if (((previousValue != value) 
							|| (this._TayMarkRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TayMarkRoom.Entity = null;
						previousValue.TayMarkBookings.Remove(this);
					}
					this._TayMarkRoom.Entity = value;
					if ((value != null))
					{
						value.TayMarkBookings.Add(this);
						this._meetingRoomId = value.roomId;
					}
					else
					{
						this._meetingRoomId = default(int);
					}
					this.SendPropertyChanged("TayMarkRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TayMarkBooking_Emps(TayMarkBooking_Emp entity)
		{
			this.SendPropertyChanging();
			entity.TayMarkBooking = this;
		}
		
		private void detach_TayMarkBooking_Emps(TayMarkBooking_Emp entity)
		{
			this.SendPropertyChanging();
			entity.TayMarkBooking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TAYMARK.TayMarkBooking_Emps")]
	public partial class TayMarkBooking_Emp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _meetingId;
		
		private int _employeeId;
		
		private EntityRef<TayMarkBooking> _TayMarkBooking;
		
		private EntityRef<TayMarkEmployee> _TayMarkEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmeetingIdChanging(int value);
    partial void OnmeetingIdChanged();
    partial void OnemployeeIdChanging(int value);
    partial void OnemployeeIdChanged();
    #endregion
		
		public TayMarkBooking_Emp()
		{
			this._TayMarkBooking = default(EntityRef<TayMarkBooking>);
			this._TayMarkEmployee = default(EntityRef<TayMarkEmployee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meetingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int meetingId
		{
			get
			{
				return this._meetingId;
			}
			set
			{
				if ((this._meetingId != value))
				{
					if (this._TayMarkBooking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmeetingIdChanging(value);
					this.SendPropertyChanging();
					this._meetingId = value;
					this.SendPropertyChanged("meetingId");
					this.OnmeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int employeeId
		{
			get
			{
				return this._employeeId;
			}
			set
			{
				if ((this._employeeId != value))
				{
					if (this._TayMarkEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeIdChanging(value);
					this.SendPropertyChanging();
					this._employeeId = value;
					this.SendPropertyChanged("employeeId");
					this.OnemployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TayMarkBooking_TayMarkBooking_Emp", Storage="_TayMarkBooking", ThisKey="meetingId", OtherKey="meetingId", IsForeignKey=true)]
		public TayMarkBooking TayMarkBooking
		{
			get
			{
				return this._TayMarkBooking.Entity;
			}
			set
			{
				TayMarkBooking previousValue = this._TayMarkBooking.Entity;
				if (((previousValue != value) 
							|| (this._TayMarkBooking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TayMarkBooking.Entity = null;
						previousValue.TayMarkBooking_Emps.Remove(this);
					}
					this._TayMarkBooking.Entity = value;
					if ((value != null))
					{
						value.TayMarkBooking_Emps.Add(this);
						this._meetingId = value.meetingId;
					}
					else
					{
						this._meetingId = default(int);
					}
					this.SendPropertyChanged("TayMarkBooking");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TayMarkEmployee_TayMarkBooking_Emp", Storage="_TayMarkEmployee", ThisKey="employeeId", OtherKey="empId", IsForeignKey=true)]
		public TayMarkEmployee TayMarkEmployee
		{
			get
			{
				return this._TayMarkEmployee.Entity;
			}
			set
			{
				TayMarkEmployee previousValue = this._TayMarkEmployee.Entity;
				if (((previousValue != value) 
							|| (this._TayMarkEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TayMarkEmployee.Entity = null;
						previousValue.TayMarkBooking_Emps.Remove(this);
					}
					this._TayMarkEmployee.Entity = value;
					if ((value != null))
					{
						value.TayMarkBooking_Emps.Add(this);
						this._employeeId = value.empId;
					}
					else
					{
						this._employeeId = default(int);
					}
					this.SendPropertyChanged("TayMarkEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TAYMARK.TayMarkEmployees")]
	public partial class TayMarkEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private string _name;
		
		private EntitySet<TayMarkBooking_Emp> _TayMarkBooking_Emps;
		
		private EntitySet<TayMarkAdmin> _TayMarkAdmins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public TayMarkEmployee()
		{
			this._TayMarkBooking_Emps = new EntitySet<TayMarkBooking_Emp>(new Action<TayMarkBooking_Emp>(this.attach_TayMarkBooking_Emps), new Action<TayMarkBooking_Emp>(this.detach_TayMarkBooking_Emps));
			this._TayMarkAdmins = new EntitySet<TayMarkAdmin>(new Action<TayMarkAdmin>(this.attach_TayMarkAdmins), new Action<TayMarkAdmin>(this.detach_TayMarkAdmins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TayMarkEmployee_TayMarkBooking_Emp", Storage="_TayMarkBooking_Emps", ThisKey="empId", OtherKey="employeeId")]
		public EntitySet<TayMarkBooking_Emp> TayMarkBooking_Emps
		{
			get
			{
				return this._TayMarkBooking_Emps;
			}
			set
			{
				this._TayMarkBooking_Emps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TayMarkEmployee_TayMarkAdmin", Storage="_TayMarkAdmins", ThisKey="empId", OtherKey="empId")]
		public EntitySet<TayMarkAdmin> TayMarkAdmins
		{
			get
			{
				return this._TayMarkAdmins;
			}
			set
			{
				this._TayMarkAdmins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TayMarkBooking_Emps(TayMarkBooking_Emp entity)
		{
			this.SendPropertyChanging();
			entity.TayMarkEmployee = this;
		}
		
		private void detach_TayMarkBooking_Emps(TayMarkBooking_Emp entity)
		{
			this.SendPropertyChanging();
			entity.TayMarkEmployee = null;
		}
		
		private void attach_TayMarkAdmins(TayMarkAdmin entity)
		{
			this.SendPropertyChanging();
			entity.TayMarkEmployee = this;
		}
		
		private void detach_TayMarkAdmins(TayMarkAdmin entity)
		{
			this.SendPropertyChanging();
			entity.TayMarkEmployee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TAYMARK.TayMarkRooms")]
	public partial class TayMarkRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _roomId;
		
		private string _roomName;
		
		private int _roomCapacity;
		
		private EntitySet<TayMarkBooking> _TayMarkBookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnroomIdChanging(int value);
    partial void OnroomIdChanged();
    partial void OnroomNameChanging(string value);
    partial void OnroomNameChanged();
    partial void OnroomCapacityChanging(int value);
    partial void OnroomCapacityChanged();
    #endregion
		
		public TayMarkRoom()
		{
			this._TayMarkBookings = new EntitySet<TayMarkBooking>(new Action<TayMarkBooking>(this.attach_TayMarkBookings), new Action<TayMarkBooking>(this.detach_TayMarkBookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int roomId
		{
			get
			{
				return this._roomId;
			}
			set
			{
				if ((this._roomId != value))
				{
					this.OnroomIdChanging(value);
					this.SendPropertyChanging();
					this._roomId = value;
					this.SendPropertyChanged("roomId");
					this.OnroomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string roomName
		{
			get
			{
				return this._roomName;
			}
			set
			{
				if ((this._roomName != value))
				{
					this.OnroomNameChanging(value);
					this.SendPropertyChanging();
					this._roomName = value;
					this.SendPropertyChanged("roomName");
					this.OnroomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomCapacity", DbType="Int NOT NULL")]
		public int roomCapacity
		{
			get
			{
				return this._roomCapacity;
			}
			set
			{
				if ((this._roomCapacity != value))
				{
					this.OnroomCapacityChanging(value);
					this.SendPropertyChanging();
					this._roomCapacity = value;
					this.SendPropertyChanged("roomCapacity");
					this.OnroomCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TayMarkRoom_TayMarkBooking", Storage="_TayMarkBookings", ThisKey="roomId", OtherKey="meetingRoomId")]
		public EntitySet<TayMarkBooking> TayMarkBookings
		{
			get
			{
				return this._TayMarkBookings;
			}
			set
			{
				this._TayMarkBookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TayMarkBookings(TayMarkBooking entity)
		{
			this.SendPropertyChanging();
			entity.TayMarkRoom = this;
		}
		
		private void detach_TayMarkBookings(TayMarkBooking entity)
		{
			this.SendPropertyChanging();
			entity.TayMarkRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TAYMARK.TayMarkAdmins")]
	public partial class TayMarkAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private EntityRef<TayMarkEmployee> _TayMarkEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    #endregion
		
		public TayMarkAdmin()
		{
			this._TayMarkEmployee = default(EntityRef<TayMarkEmployee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					if (this._TayMarkEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TayMarkEmployee_TayMarkAdmin", Storage="_TayMarkEmployee", ThisKey="empId", OtherKey="empId", IsForeignKey=true)]
		public TayMarkEmployee TayMarkEmployee
		{
			get
			{
				return this._TayMarkEmployee.Entity;
			}
			set
			{
				TayMarkEmployee previousValue = this._TayMarkEmployee.Entity;
				if (((previousValue != value) 
							|| (this._TayMarkEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TayMarkEmployee.Entity = null;
						previousValue.TayMarkAdmins.Remove(this);
					}
					this._TayMarkEmployee.Entity = value;
					if ((value != null))
					{
						value.TayMarkAdmins.Add(this);
						this._empId = value.empId;
					}
					else
					{
						this._empId = default(int);
					}
					this.SendPropertyChanged("TayMarkEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="TAYMARK.TayMarkAdminPass")]
	public partial class TayMarkAdminPass
	{
		
		private string _password;
		
		public TayMarkAdminPass()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
